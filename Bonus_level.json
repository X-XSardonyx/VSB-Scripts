local CF = CFrame.new(0,300,0)
local load = false

local rooms = {}
local IND = 3

local floors = {BrickColor.new("Really red"), "Fabric"}
local walls = {BrickColor.new("Cork"), "WoodPlanks"}
local roofs = {BrickColor.new("CGA brown"), "Granite"}

for i=1,IND+1 do
table.insert(rooms, Instance.new("Part"))
end

function rush(p1,p2)

local r = Instance.new("Part", Instance.new("WorldModel", script))
r.Size = Vector3.new(10,10,0)
r.CFrame = CFrame.new(p1, p2) * CFrame.new(0,0,30)
r.Transparency = 1

sb = Instance.new("SurfaceGui", r)

local f = Instance.new("TextBox", sb)
f.Size = UDim2.new(1,0,1,0)
f.BackgroundTransparency = 1
f.Text = "ðŸ’€"
f.TextScaled = true

sound = Instance.new("Sound", r)
sound.Volune = 4
sound.MaxDistance = 200
sound.SoundId = "rbxassetid://138078479"
sound.Looped = true
sound:Play()
wait(7)
for i=1,50 do

pos = p1:Lerp(p2, i/50)
r.CFrame = CFrame.new(pos, p2)
ray = workspace:Raycast(pos, owner.Character.HumanoidRootPart.Position)
if ray then
if ray.Target == owner.Character.HumanoidRootPart then
owner.Character:BreakJoints()
end
end

wait()
end
r:Destroy()
end

function room1()

m = Instance.new("Model", script)
local floor = Instance.new("Part", m)
floor.Size = Vector3.new(20,1,60)
floor.Anchored = true
floor.Material = floors[2]
floor.BrickColor = floors[1]
floor.CFrame = CF * CFrame.new(0,0,-30)

roof = floor:Clone()
roof.Position = roof.Position + Vector3.new(0,15,0)
roof.Parent = m
roof.Material = roofs[2]
roof.BrickColor = roofs[1]

local wall = Instance.new("Part", m)
wall.Size = Vector3.new(1,20,60)
wall.Anchored = true
wall.Material = walls[2]
wall.BrickColor = walls[1]
wall.CFrame = CF * CFrame.new(10,7.5,-30)

local wall = Instance.new("Part", m)
wall.Size = Vector3.new(1,20,60)
wall.Anchored = true
wall.Material = walls[2]
wall.BrickColor = walls[1]
wall.CFrame = CF * CFrame.new(-10,7.5,-30)

local closet = Instance.new("Part", m)
closet.Size = Vector3.new(6,8,5)
closet.Anchored = true
closet.Material = closet[2]
closet.BrickColor = closet[1]
closet.CFrame = CF*CFrame.new(5,4,30)

CF = CF * CFrame.new(0,0,-60)
table.insert(rooms, m)
return m
end

function room2()

m = Instance.new("Model", script)
local floor = Instance.new("Part", m)
floor.Size = Vector3.new(60,1,20)
floor.Anchored = true
floor.Material = floors[2]
floor.BrickColor = floors[1]
floor.CFrame = CF * CFrame.new(-20,0,-10)

roof = floor:Clone()
roof.Position = roof.Position + Vector3.new(0,15,0)
roof.Parent = m
roof.Material = roofs[2]
roof.BrickColor = roofs[1]

local wall = Instance.new("Part", m)
wall.Size = Vector3.new(60,15,1)
wall.Anchored = true
wall.Material = walls[2]
wall.BrickColor = walls[1]
wall.CFrame = CF * CFrame.new(-20,7.5,-20)

local wall = Instance.new("Part", m)
wall.Size = Vector3.new(1,15,20)
wall.Anchored = true
wall.Material = walls[2]
wall.BrickColor = walls[1]
wall.CFrame = CF * CFrame.new(10.5,7.5,-10)

local wall = Instance.new("Part", m)
wall.Size = Vector3.new(40,15,1)
wall.Anchored = true
wall.Material = walls[2]
wall.BrickColor = walls[1]
wall.CFrame = CF * CFrame.new(-30,7.5,0)

CF = CF * CFrame.new(-50,0,-10) * CFrame.Angles(0,math.rad(90),0)
table.insert(rooms, m)

end

function room3()

m = Instance.new("Model", script)
local floor = Instance.new("Part", m)
floor.Size = Vector3.new(60,1,20)
floor.Anchored = true
floor.Material = floors[2]
floor.BrickColor = floors[1]
floor.CFrame = CF * CFrame.new(20,0,-10)

roof = floor:Clone()
roof.Position = roof.Position + Vector3.new(0,15,0)
roof.Parent = m
roof.Material = roofs[2]
roof.BrickColor = roofs[1]

local wall = Instance.new("Part", m)
wall.Size = Vector3.new(60,15,1)
wall.Anchored = true
wall.Material = walls[2]
wall.BrickColor = walls[1]
wall.CFrame = CF * CFrame.new(20,7.5,-20)

local wall = Instance.new("Part", m)
wall.Size = Vector3.new(1,15,20)
wall.Anchored = true
wall.Material = walls[2]
wall.BrickColor = walls[1]
wall.CFrame = CF * CFrame.new(-10.5,7.5,-10)

local wall = Instance.new("Part", m)
wall.Size = Vector3.new(40,15,1)
wall.Anchored = true
wall.Material = walls[2]
wall.BrickColor = walls[1]
wall.CFrame = CF * CFrame.new(30,7.5,0)

CF = CF * CFrame.new(50,0,-10) * CFrame.Angles(0,math.rad(-90),0)
table.insert(rooms, m)

end

function stairs()

m = Instance.new("Model", script)

local floor = Instance.new("Part", m)
floor.Size = Vector3.new(20,1,30)
floor.Anchored = true
floor.Material = floors[2]
floor.BrickColor = floors[1]
floor.CFrame = CF * CFrame.new(0,45-15,-45)

roof = floor:Clone()
roof.CFrame = floor.CFrame * CFrame.new(0,15,15)
roof.Size = Vector3.new(20,1,60)
roof.Material = roofs[2]
roof.BrickColor = roofs[1]
roof.Parent = m

local wall = Instance.new("Part", m)
wall.Size = Vector3.new(1,60,60)
wall.Anchored = true
wall.Material = walls[2]
wall.BrickColor = walls[1]
wall.CFrame = CF * CFrame.new(10,60/2,-30)

local wall = Instance.new("Part", m)
wall.Size = Vector3.new(1,60,60)
wall.Anchored = true
wall.Material = walls[2]
wall.BrickColor = walls[1]
wall.CFrame = CF * CFrame.new(-10,60/2,-30)

local wall = Instance.new("Part", m)
wall.Size = Vector3.new(20,45,1)
wall.Anchored = true
wall.Material = walls[2]
wall.BrickColor = walls[1]
wall.CFrame = CF * CFrame.new(0,15+(45/2),0)

for i=1,(45-15)/2 do
p = Instance.new("Part", m)
p.Size = Vector3.new(20,2,2)
p.Anchored = true
p.Material = floors[2]
p.BrickColor = floors[1]
p.CFrame = CF * CFrame.new(0,i*2 - 1,-i*2 + 1)
end


CF = CF * CFrame.new(0,45-15,-60)
table.insert(rooms, m)
end

function door()
local loc = CF * CFrame.new(0,3.5,0)
local p = Instance.new("Part", m)
p.Size = Vector3.new(5,7,.8)
p.Anchored = true
p.Material = "Wood"
p.CFrame = loc
p.Name = "Door"
p.BrickColor = BrickColor.new("CGA brown")
l = Instance.new("PointLight", p)
l.Range=15
l.Color = BrickColor.new("Cyan").Color

sc = Instance.new("SurfaceGui", p)
sc.Face = "Back"
im = Instance.new("TextBox", sc)
im.TextEditable = false
im.Size = UDim2.new(1,0,.4,0)
im.Text = IND-3
im.TextScaled = true
im.BackgroundTransparency = 1

local wall = Instance.new("Part", m)
wall.Size = Vector3.new(20,13,1)
wall.Anchored = true
wall.Material = walls[2]
wall.BrickColor = walls[1]
wall.CFrame = CF * CFrame.new(0,20-(13/3)-2.25,0)

local wall = Instance.new("Part", m)
wall.Size = Vector3.new(15/2,7,1)
wall.Anchored = true
wall.Material = walls[2]
wall.BrickColor = walls[1]
wall.CFrame = CF * CFrame.new(15/2-1.5,3.5,0)

local wall = Instance.new("Part", m)
wall.Size = Vector3.new(15/2,7,1)
wall.Anchored = true
wall.Material = walls[2]
wall.BrickColor = walls[1]
wall.CFrame = CF * CFrame.new(-15/2+1.5,3.5,0)

coroutine.wrap(function()
repeat wait() until (owner.Character.HumanoidRootPart.Position-p.Position).Magnitude < 12

c = math.random(1,4)

if c == 1 then
room1()
elseif c == 2 then
room2()
elseif c == 3 then
room3()
elseif c == 4 then
stairs()
end
door()

if c == 1 then
if math.random(1,20) == 1 then
rush(rooms[IND-1].Door.Position, rooms[IND].Door.Position)
end
end

p.CanCollide = false

for i = 1,15 do
wait()
p.CFrame = loc*CFrame.new(2.5,0,0) * CFrame.Angles(0,math.rad(-(90/15)*i),0) * CFrame.new(-2.5,0,0)
end

coroutine.wrap(function()

oldIND = IND
repeat wait() until IND == oldIND+1

for i = 1,15 do
wait()
p.CFrame = loc*CFrame.new(2.5,0,0) * CFrame.Angles(0,math.rad(90-(90/15)*i),0) * CFrame.new(-2.5,0,0)
end

p.CanCollide = true

end)()



end)()

if IND-3 ~= 100 then
IND = IND + 1
del = rooms[IND-2]
print(IND)
del:Destroy()

end
end

start = room1()

local wall = Instance.new("Part", start)
wall.Size = Vector3.new(20,15,1)
wall.Anchored = true
wall.Material = walls[2]
wall.BrickColor = walls[1]
wall.CFrame = CF * CFrame.new(0,7.5,60)

door()

owner.Character:MoveTo(CF*CFrame.new(0,0,20).Position)